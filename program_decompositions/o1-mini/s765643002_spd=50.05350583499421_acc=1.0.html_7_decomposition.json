{"optimized_code": "#include <bits/stdc++.h>\n \n #define ll long long\n \n #define ull unsigned long long\n \n #define BUG cout << \"************\\n\"\n \n \n \n using namespace std;\n \n \n \n typedef long long LL;\n \n \n \n const double EPS = 1e-10;\n \n \n \n const int INF = 1e9+100;\n \n \n \n const int N = 1e6+10;\n \n \n \n int a[N], b[N], c[N];\n \n int r_sorted[N];\n \n LL f_tree[N];\n \n ll n, m;\n \n \n \n // Custom comparison function\n \n bool cmp(int x, int y){\n \n     return x < y;\n \n }\n \n \n \n void Add(int x, int size){\n \n     while(x <= size){\n \n         f_tree[x] += 1;\n \n         x += (x & -x);\n \n     }\n \n }\n \n \n \n int Query(int x){\n \n     int ans = 0;\n \n     while(x > 0){\n \n         ans += f_tree[x];\n \n         x -= (x & -x);\n \n     }\n \n     return ans; \n \n }\n \n \n \n bool check(int k){\n \n     memset(f_tree, 0, sizeof(LL) * (n + 2));\n \n     LL Ans = 0;\t\n \n     b[0] = 0;\n \n     for(int i = 1; i <= n; i++) {\n \n         if (a[i] >= c[k])\n \n             b[i] = b[i-1] + 1;\n \n         else\n \n             b[i] = b[i-1];\n \n     }\n \n     \n \n     // Populate r_sorted with transformed b[i]\n \n     for(int i = 0; i <= n; i++) {\n \n         r_sorted[i] = 2 * b[i] - i + n + 1;\n \n     }\n \n     \n \n     // Sort using custom comparison function and remove duplicates for coordinate compression\n \n     sort(r_sorted, r_sorted + n + 1, cmp);\n \n     int unique_size = unique(r_sorted, r_sorted + n + 1) - r_sorted;\n \n     \n \n     // Replace b[i] with their ranks\n \n     for(int i = 0; i <= n; i++) {\n \n         b[i] = lower_bound(r_sorted, r_sorted + unique_size, r_sorted[i]) - r_sorted + 1;\n \n     }\n \n     \n \n     for(int i = 0; i <= n; i++) {\n \n         Ans += Query(b[i]);\n \n         Add(b[i], unique_size);\n \n     }\n \n     \n \n     LL t = (1LL * n * (n + 1)) / 2;\n \n     return Ans >= ((t + 1) / 2);\n \n }\n \n \n \n int main(){\n \n     ios::sync_with_stdio(false);\n \n     cin.tie(0);\n \n     cout.tie(0);\n \n     \n \n     cin >> n;\n \n     ll l = 1, r = n;\n \n     for(int i = 1; i <= n; i++){\n \n         cin >> a[i];\n \n         c[i] = a[i];\n \n     }\n \n     sort(c + 1, c + n + 1);\n \n     int ans = 0;\n \n     while(l <= r){\n \n         ll mid = (l + r) >> 1;\n \n         if (check(mid)){\n \n             ans = c[mid];\n \n             l = mid + 1;\n \n         }\n \n         else{\n \n             r = mid - 1;\n \n         }\n \n     }\n \n     cout << ans << \"\\n\";\n \n     return 0;\n \n }\n"}