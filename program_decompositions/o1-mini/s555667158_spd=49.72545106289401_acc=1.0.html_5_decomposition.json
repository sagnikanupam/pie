{"optimized_code": "#include <iostream>\n \n #include <vector>\n \n #include <algorithm>\n \n #include <cmath>\n \n \n \n using namespace std;\n \n \n \n using ll = long long;\n \n const ll INF = 1e18;\n \n \n \n struct ArrItem {\n \n     ll height;\n \n     ll dp;\n \n };\n \n \n \n int main() {\n \n     ios::sync_with_stdio(false);\n \n     cin.tie(nullptr);\n \n     \n \n     ll n, k;\n \n     cin >> n >> k;\n \n     \n \n     vector<ArrItem> arr(n + 1, ArrItem{0, INF});\n \n     \n \n     for(int i = 1; i <= n; ++i) {\n \n         cin >> arr[i].height;\n \n     }\n \n     \n \n     arr[1].dp = 0;\n \n     if(n >= 2) {\n \n         arr[2].dp = abs(arr[2].height - arr[1].height);\n \n     }\n \n     \n \n     for(int i = 2; i <= n; ++i) {\n \n         ll lower = max(i - k, 1LL);\n \n         for(int j = i - 1; j >= lower; --j) {\n \n             arr[i].dp = min(arr[i].dp, arr[j].dp + abs(arr[i].height - arr[j].height));\n \n         }\n \n     }\n \n     \n \n     cout << arr[n].dp << '\\n';\n \n     return 0;\n \n }\n"}