```cpp
#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

using ll = long long;
const ll INF = 1e18;

struct ArrItem {
    ll height;
    ll dp;
};

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    ll n, k;
    cin >> n >> k;
    
    vector<ArrItem> arr(n + 1, ArrItem{0, INF});
    
    for(int i = 1; i <= n; ++i) {
        cin >> arr[i].height;
    }
    
    arr[1].dp = 0;
    if(n >= 2) {
        arr[2].dp = abs(arr[2].height - arr[1].height);
    }
    
    for(int i = 2; i <= n; ++i) {
        ll lower = max(i - k, 1LL);
        for(int j = i - 1; j >= lower; --j) {
            arr[i].dp = min(arr[i].dp, arr[j].dp + abs(arr[i].height - arr[j].height));
        }
    }
    
    cout << arr[n].dp << '\n';
    return 0;
}
```