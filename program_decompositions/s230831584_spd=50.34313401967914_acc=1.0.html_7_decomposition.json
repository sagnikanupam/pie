{"optimized_code": "#include <bits/stdc++.h>\n \n #include <cstdarg>\n \n #include <cstdio>\n \n \n \n using namespace std;\n \n \n \n // Debugging macros\n \n #ifdef DEBUG\n \n     #define DEBUG_PRINT(...) debug_print(__VA_ARGS__)\n \n #else\n \n     #define DEBUG_PRINT(...)\n \n #endif\n \n \n \n typedef long long ll;\n \n \n \n const int inf = 0x3f3f3f3f;\n \n \n \n // Macro for forward loops\n \n #define forn(i, a, b) for(int i = a; i < b; ++i)\n \n \n \n // Debug print function with variadic templates\n \n void debug_print(const char* format, ...) {\n \n     va_list args;\n \n     va_start(args, format);\n \n     vfprintf(stderr, format, args);\n \n     va_end(args);\n \n }\n \n \n \n // Efficient read function\n \n void read(vector<ll> &v, int start, int end){\n \n     forn(i, start, end){\n \n         ll x = 0;\n \n         int c = getchar();\n \n         // Skip non-digit and non-minus characters\n \n         while((c < '0' || c > '9') && c != '-' && c != EOF){\n \n             c = getchar();\n \n         }\n \n         bool neg = false;\n \n         if(c == '-'){\n \n             neg = true;\n \n             c = getchar();\n \n         }\n \n         while(c >= '0' && c <= '9'){\n \n             x = x * 10 + (c - '0');\n \n             c = getchar();\n \n         }\n \n         if(neg) x = -x;\n \n         v[i] = x;\n \n         DEBUG_PRINT(\"Read arr[%d] = %lld\\n\", i, x);\n \n     }\n \n }\n \n \n \n // Custom input function replacing cin\n \n void read_input(int &n, int &k){\n \n     n = 0;\n \n     k = 0;\n \n     int c = getchar();\n \n     // Read n\n \n     while((c < '0' || c > '9') && c != EOF){\n \n         c = getchar();\n \n     }\n \n     while(c >= '0' && c <= '9'){\n \n         n = n * 10 + (c - '0');\n \n         c = getchar();\n \n     }\n \n     DEBUG_PRINT(\"Input n = %d\\n\", n);\n \n     // Read k\n \n     while((c < '0' || c > '9') && c != EOF){\n \n         c = getchar();\n \n     }\n \n     while(c >= '0' && c <= '9'){\n \n         k = k * 10 + (c - '0');\n \n         c = getchar();\n \n     }\n \n     DEBUG_PRINT(\"Input k = %d\\n\", k);\n \n }\n \n \n \n // Custom output function replacing cout\n \n void print_output(ll value){\n \n     printf(\"%lld\\n\", value);\n \n     DEBUG_PRINT(\"Output dp[%d] = %lld\\n\", -1, value); // -1 indicates the final output\n \n }\n \n \n \n int main()\n \n {\n \n     // Removed synchronization with stdio and cin as they are not used\n \n     int n, k;\n \n     read_input(n, k);\n \n     \n \n     // Allocate memory once using assign with zero-based indexing\n \n     vector<ll> arr(n, 0);\n \n     vector<ll> dp(n, inf);\n \n     \n \n     read(arr, 0, n);\n \n     if(n > 0){\n \n         dp[0] = 0;\n \n         DEBUG_PRINT(\"Initialized dp[0] = 0\\n\");\n \n     }\n \n     forn(i, 1, n)\n \n     {\n \n         int lower = max(0, i - k);\n \n         forn(j, lower, i)\n \n         {\n \n             dp[i] = min(dp[i], dp[j] + abs(arr[i] - arr[j]));\n \n             DEBUG_PRINT(\"dp[%d] = min(dp[%d]=%lld, dp[%d]=%lld + |%lld - %lld|=%lld) --> dp[%d]=%lld\\n\",\n \n                         i, j, dp[j], j, dp[j], arr[i], arr[j], abs(arr[i] - arr[j]), i, dp[i]);\n \n         }\n \n     }\n \n     if(n > 0){\n \n         print_output(dp[n-1]);\n \n     }\n \n }\n"}