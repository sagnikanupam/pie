{"optimized_code": "#include <bits/stdc++.h>\n \n \n \n using namespace std;\n \n \n \n #define IO ios::sync_with_stdio(false), cin.tie(0)\n \n \n \n typedef long long ll;\n \n \n \n const int inf = 0x3f3f3f3f;\n \n \n \n // Efficient read function\n \n void read(vector<ll> &v, int start, int end){\n \n     for(int i = start; i <= end; ++i){\n \n         ll x = 0;\n \n         int c = getchar();\n \n         // Skip non-digit and non-minus characters\n \n         while((c < '0' || c > '9') && c != '-' && c != EOF){\n \n             c = getchar();\n \n         }\n \n         bool neg = false;\n \n         if(c == '-'){\n \n             neg = true;\n \n             c = getchar();\n \n         }\n \n         while(c >= '0' && c <= '9'){\n \n             x = x * 10 + (c - '0');\n \n             c = getchar();\n \n         }\n \n         if(neg) x = -x;\n \n         v[i] = x;\n \n     }\n \n }\n \n \n \n int main()\n \n {\n \n     IO;\n \n     int n, k;\n \n     cin >> n >> k;\n \n     vector<ll> arr(n + 1);\n \n     read(arr, 1, n);\n \n     vector<ll> dp(n + 1, inf);\n \n     dp[1] = 0;\n \n     for(int i = 2; i <= n; ++i)\n \n     {\n \n         for(int j = 1; j <= k; ++j)\n \n         {\n \n             dp[i] = min(dp[i], dp[max(i - j, 1)] + abs(arr[i] - arr[max(i - j, 1)]);\n \n         }\n \n     }\n \n     cout << dp[n] << endl;\n \n }\n"}