{"optimized_code": "#include <bits/stdc++.h>\n\n#define mem(x,v) memset(x,v,sizeof(x)) \n\n#define go(i,a,b)  for (int i = a; i <= b; i++)\n\n#define og(i,a,b)  for (int i = a; i >= b; i--)\n\n#define MID(a,b) (a + b) >> 1\n\n#define lson now << 1\n\n#define rson now << 1 | 1\n\n#define low(x) (x & (-x))\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst double EPS = 1e-10;\n\nconst int INF = 1e9+100;\n\nconst int N = 1e6+10;\n\nint a[N],b[N];\n\nLL f[4*N];\n\nint n,tt;\n\nvoid Add(int x){\n\n\twhile(x <= 4*n){\n\n\t\tf[x] += 1;\n\n\t\tx += low(x);\n\n\t}\n\n}\n\nint Query(int x){\n\n\tint ans = 0;\n\n\twhile(x > 0) ans += f[x], x -= low(x);\n\n\treturn ans; \n\n}\n\nbool check(int k){\n\n\tmem(f,0);\n\n\tLL Ans = 0; b[0] = 0;\n\n\tbool recompute = true;\n\n\tif (recompute) {\n\n\t\tgo(i,1,n) if (a[i] >= b[k]) b[i] = b[i-1] + 1; else b[i] = b[i-1];\n\n\t\trecompute = false;\n\n\t}\n\n\tgo(i,0,n) {\n\n\t\tb[i] = 2*b[i] - i + n + 1;\n\n\t\tAns += Query(b[i]);\n\n\t\tAdd(b[i]);\n\n\t}\n\n\tLL t = (1LL * n * (n + 1)) / 2;\n\n\treturn Ans >= (t+1)/2;\n\n}\n\nint main(){\n\n\tscanf(\"%d\",&n);\n\n\tint l = 1, r = n;\n\n\tgo(i,1,n){\n\n\t\tscanf(\"%d\",&a[i]);\n\n\t}\n\n\tint ans = 0;\n\n\twhile(l <= r){\n\n\t\tint mid = MID(l,r);\n\n\t\tif (check(mid)) l = mid+1,ans = mid; else r = mid - 1;\n\n\t}\n\n\tprintf(\"%d\\n\",ans);\n\n\treturn 0;\n\n}"}