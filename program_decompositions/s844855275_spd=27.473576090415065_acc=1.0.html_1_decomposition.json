{"optimized_code": "#include <algorithm>\n \n #include <iostream>\n \n #include <cstring>\n \n #include <cstdio>\n \n #include <cmath>\n \n #include <queue>\n \n #include <vector>\n \n #include <map>\n \n #define mem(u, v) memset(u, v, sizeof(u))\n \n #define INF 0x3f3f3f3f\n \n #define pii pair<int, int >\n \n #define LL long long\n \n #define mid (l + r) / 2\n \n #define lowbit(x) x & -x\n \n using namespace std;\n \n \n \n const int MAXN = 1e6 + 7,  MAXM = 1e6 + 7, MAXK = 1e6 + 7;\n \n \n \n struct node {\n \n     int val;\n \n     int pos;\n \n } a[MAXN], b[MAXN];\n \n \n \n int sum[MAXN], c[MAXN], n;\n \n LL ans0;\n \n \n \n bool cmp(const node &x, const node &y){\n \n     return x.val < y.val;\n \n }\n \n \n \n void add(int x){\n \n     while (x <= 5 * n){\n \n         c[x] += 1;\n \n         x += lowbit(x);\n \n     }\n \n }\n \n \n \n int get(int x){\n \n     int y = 0;\n \n     while (x > 0){\n \n         y += c[x];\n \n         x -= lowbit(x);\n \n     }\n \n     return y;\n \n }\n \n \n \n bool judge(int x){\n \n     sum[0] = 0;\n \n     for (int i = 1; i <= n; i++){\n \n         if (a[i].val >= x) sum[i] = sum[i - 1] + 1;\n \n         else sum[i] = sum[i - 1];\n \n     }\n \n     for (int i = 0; i <= n; i++) sum[i] = 2 * sum[i] - i + n + 1;\n \n     LL ans1 = 0;\n \n     mem(c, 0);\n \n     for (int i = 0; i <= n; i++){\n \n         ans1 += get(sum[i]);\n \n         add(sum[i]);\n \n     }\n \n     return ans1 >= ans0;\n \n }\n \n \n \n int main(){\n \n     scanf(\"%d\", &n);\n \n     for (int i = 1; i <= n; i++) {\n \n         scanf(\"%d\", &a[i].val);\n \n         a[i].pos = i;\n \n         b[i] = a[i];\n \n     }\n \n     sort(b + 1, b + n + 1, cmp);\n \n     int l = 1, r = n, ans = 0;\n \n     ans0 = (1LL * n * (n - 1) / 2 + n + 1) / 2LL;\n \n     while (l <= r){\n \n         int m = mid;\n \n         if (judge(b[m].val)) {\n \n             ans = m;\n \n             l = m + 1;\n \n         }\n \n         else {\n \n             r = m - 1;\n \n         }\n \n     }\n \n     printf(\"%d\\n\", b[ans].val);\n \n     return 0;\n \n }\n"}