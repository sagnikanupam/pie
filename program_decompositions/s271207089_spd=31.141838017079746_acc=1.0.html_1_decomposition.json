{"optimized_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#define ll long long\n\n#define int long long\n\n#define MN 100005\n\nusing namespace std;\n\ninline int read() {\n    int x = 0; char c = getchar();\n    while (c < '0' || c > '9') c = getchar(); // Skip non-digit characters\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x;\n}\n\nint c[MN << 2], d[MN], sum[MN], a[MN], b[MN];\n\nint n, tot, l, r, res;\n\nll num;\n\ninline void add(int x, int v) {\n    for (int i = x; i <= ((n << 1) | 1); i += i & (-i)) c[i] += v;\n}\n\ninline int query(int x) {\n    int res = 0;\n    for (int i = x; i; i -= i & (-i)) res += c[i];\n    return res;\n}\n\ninline bool check(int x) {\n    for (int i = 1; i <= n; ++i) sum[i] = sum[i - 1] + (a[i] > b[x]);\n\n    for (int i = 1; i <= n; ++i) d[i] = (sum[i] << 1) - i + n + 1; d[0] = n + 1;\n\n    memset(c, 0, sizeof(c));\n\n    add(d[0], 1); num = 0ll;\n\n    for (int i = 1; i <= n; ++i)\n        num += 1ll * (query(((n << 1) | 1)) - query(d[i])), add(d[i], 1);\n\n    return (num > 1ll * (n * (n + 1ll)) / 4ll);\n}\n\nsigned main() {\n    n = read();\n\n    for (int i = 1; i <= n; ++i) a[i] = b[i] = read();\n\n    sort(b + 1, b + n + 1);\n\n    tot = unique(b + 1, b + n + 1) - b - 1;\n\n    l = 0, r = tot, res = 0;\n\n    while (l <= r) {\n        int mid = (l + r) >> 1;\n\n        if (check(mid)) res = mid, r = mid - 1;\n\n        else l = mid + 1;\n\n    }\n\n    printf(\"%d\", b[res]); return 0;\n}\n"}