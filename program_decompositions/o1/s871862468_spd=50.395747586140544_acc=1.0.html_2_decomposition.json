{"optimized_code": "#include <iostream>\n \n #include <cmath>\n \n #include <algorithm>\n \n \n \n #define ll long long\n \n #define MAX_NUM 1000000000LL\n \n \n \n using namespace std;\n \n \n \n ll fun(ll i, ll n, ll k, ll ar[], ll dp[])\n \n {\n \n     if (i >= n)\n \n     {\n \n         return MAX_NUM;\n \n     }\n \n     if (i == n - 1)\n \n     {\n \n         return 0;\n \n     }\n \n     if (dp[i] != -1)\n \n     {\n \n         return dp[i];\n \n     }\n \n     ll minimum = MAX_NUM;\n \n     for (int j = 1; j <= k; j++)\n \n     {\n \n         if (i + j < n)\n \n         {\n \n             ll temp = abs(ar[i] - ar[i + j]) + fun(i + j, n, k, ar, dp);\n \n             minimum = min(minimum, temp);\n \n         }\n \n     }\n \n     dp[i] = minimum;\n \n     return dp[i];\n \n }\n \n \n \n int main()\n \n {\n \n     ll n, k;\n \n     cin >> n >> k;\n \n     ll* ar = new ll[n + 1];\n \n     ll* dp = new ll[n + 1];\n \n     for (int i = 0; i < n; i++)\n \n     {\n \n         cin >> ar[i];\n \n         dp[i] = -1;\n \n     }\n \n     dp[n] = -1;\n \n     ar[n] = 0;\n \n     ll ans = fun(0, n, k, ar, dp);\n \n     cout << ans << endl;\n \n     delete[] ar;\n \n     delete[] dp;\n \n     return 0;\n \n }\n"}