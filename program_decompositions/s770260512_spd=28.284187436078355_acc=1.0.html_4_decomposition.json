{"optimized_code": "#include <bits/stdc++.h>\n \n \n \n #define INF 0x3f3f3f3f\n \n \n \n using namespace std;\n \n \n \n const int maxn = 1e5+5;\n \n \n \n int a[maxn];\n \n int dp[maxn];\n \n \n \n int main()\n \n {\n \n     ios::sync_with_stdio(false);\n \n     cin.tie(NULL);\n \n \n \n     int n, k;\n \n     memset(dp, INF, sizeof dp);\n \n     cin >> n >> k;\n \n \n \n     for(int i = 1; i <= n; i++)\n \n     {\n \n         cin >> a[i];\n \n     }\n \n \n \n     dp[1] = 0;\n \n \n \n     for(int i = 1; i <= n-1; i++)\n \n     {\n \n         // Compute dp[i + 1] outside the inner loop\n \n         if(i + 1 <= n){\n \n             dp[i + 1] = min(dp[i + 1], dp[i] + abs(a[i + 1] - a[i]));\n \n         }\n \n \n \n         // Set the upper bound using the min function to enhance loop efficiency\n \n         int upper = min(k, i - 1);\n \n         for(int j = 2; j <= upper; j++)\n \n         {\n \n             if(i + j <= n){\n \n                 dp[i + j] = min(dp[i + j], dp[i] + abs(a[i + j] - a[i]));\n \n             }\n \n         }\n \n     }\n \n \n \n     cout << dp[n] << \"\\n\";\n \n \n \n     return 0;\n \n }\n"}