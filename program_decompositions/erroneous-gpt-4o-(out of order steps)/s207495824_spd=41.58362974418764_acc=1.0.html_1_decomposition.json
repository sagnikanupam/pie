{"optimized_code": "/*\n\nCode By RyeCatcher\n\n*/\n\n#include <bits/stdc++.h>\n\n#define ri register int \n\n#define ll long long \n\nconst int maxn=200005;\n\nconst int inf=0x7fffffff;\n\nint n,nn,a[maxn],b[maxn],c[maxn],mx=-inf,mi=inf;\n\nll sum[maxn<<2];\n\ninline void read(int &x){\n    x=0;int ne=0;char c;\n    while(!isdigit(c=getchar()))ne=c=='-';\n    x=c-48;\n    while(isdigit(c=getchar()))x=(x<<3)+(x<<1)+c-48;\n    x=ne?-x:x;return ;\n}\n\ninline void update(int x,int d){for(;x<=nn;x+=x&(-x))sum[x]+=d;}\n\ninline ll query(int x){ll ans=0;for(;x;x-=x&(-x))ans+=sum[x];return ans;}\n\ninline ll chk(int k){\n    ll ans=0;\n    b[0]=0;\n    for(ri i=1;i<=n;i++){\n        b[i]=b[i-1]+((a[i]<=k)?1:-1);\n        c[i]=b[i];\n        ans+=(b[i]>0);\n    }\n    std::sort(c+1,c+1+n);\n    nn=std::unique(c+1,c+1+n)-(c+1);\n    memset(sum,0,sizeof(sum));\n    for(ri i=1;i<=n;i++){\n    \tb[i]=std::lower_bound(c+1,c+1+nn,b[i])-c;\n        ans+=query(b[i]-1);\n        update(b[i],1);\n    }\n    return ans;\n}\n\nint main(){\n    read(n);\n    for(ri i=1;i<=n;i++){\n        read(a[i]);\n        mi=std::min(mi,a[i]),mx=std::max(mx,a[i]);\n    }\n    int L=mi,R=mx,mid,ans;\n\tll lim=1ll*n*(n+1)/4+1;//\u6ce8\u610flong long \n    while(L<=R){\n        mid=(L+R)>>1;\n        if(chk(mid)>=lim)ans=mid,R=mid-1;\n        else L=mid+1;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}"}