{"optimized_code": "#include <bits/stdc++.h>\n\n#define mem(x,v) memset(x,v,sizeof(x))\n#define go(i,a,b) for (int i = a; i <= b; i++)\n#define MID(a,b) ((a + b) >> 1)\n#define low(x) (x & (-x))\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst double EPS = 1e-10;\nconst int INF = 1e9+100;\nconst int N = 1e6+10;\n\nint a[N],b[N],c[N];\nLL f[N];\nint n,tt;\n\nvoid Add(int x){\n    while(x <= 3*n){\n        f[x] += 1;\n        x += low(x);\n    }\n}\n\nint Query(int x){\n    int ans = 0;\n    while(x > 0) ans += f[x], x -= low(x);\n    return ans; \n}\n\nbool find(int k){\n    mem(f,0);\n    LL Ans = 0;    b[0] = 0;\n    go(i,1,n) if (a[i] >= c[k]) b[i] = b[i-1] + 1; else b[i] = b[i-1];\n    go(i,0,n) {\n        b[i] = 2*b[i] - i + n + 1;\n        Ans += Query(b[i]);\n        Add(b[i]);\n    }\n    LL t = (1LL * n * (n + 1)) / 2;\n    return Ans >= (t+1)/2;\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    go(i,1,n){\n        scanf(\"%d\",&a[i]);\n        c[i] = a[i];\n    }\n    sort(c+1,c+n+1);\n    int l = 1, r = n, ans = 0;\n    while(l <= r){\n        int mid = MID(l,r);\n        if (find(mid)) l = mid+1,ans = c[mid];\n        else r = mid - 1;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}"}