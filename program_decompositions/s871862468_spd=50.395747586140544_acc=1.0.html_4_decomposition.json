{"optimized_code": "#include <iostream>\n#include <cmath>\n#include <algorithm>\n\n#define ll long long\n#define MAX_NUM 1000000000\n\nusing namespace std;\n\nint main() {\n    ios_base::sync_with_stdio(false); // Faster input/output\n    ll n, k;\n    cin >> n >> k;\n\n    ll h[1000000];\n    ll dp[1000000];\n\n    for (int i = 0; i < n; i++) {\n        cin >> h[i];\n    }\n\n    dp[0] = 0;\n    for (int i = 1; i < n; i++) {\n        dp[i] = MAX_NUM;\n        for (int j = max(1, i - k); j <= i; j++) {  // Look only at last 'k' or fewer steps\n            dp[i] = min(dp[i], abs(h[i] - h[j - 1]) + dp[j - 1]);\n        }\n    }\n\n    printf(\"%lld\\n\", dp[n - 1]);\n    return 0;\n}"}