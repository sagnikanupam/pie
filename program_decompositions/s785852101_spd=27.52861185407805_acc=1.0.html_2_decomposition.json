{"optimized_code": "#include <bits/stdc++.h>\n \n \n \n using namespace std;\n \n \n \n typedef long long int ll;\n \n \n \n const int INF = 1000000000;\n \n \n \n int main(){\n \n     cin.tie(0);\n \n     ios::sync_with_stdio(false);\n \n \n \n     string a, b;\n \n     cin >> a >> b;\n \n \n \n     int n = a.size(), m = b.size();\n \n     // Initialize dp vector with (n+1) rows and (m+1) columns set to 0\n \n     vector<vector<int>> dp(n + 1, vector<int>(m + 1, 0));\n \n \n \n     for(int i = 0; i < m + 1; i++) {\n \n         dp[0][i] = i;\n \n     }\n \n     for(int i = 0; i < n + 1; i++) {\n \n         dp[i][0] = i;\n \n     }\n \n \n \n     for(int i = 1; i < n + 1; i++) {\n \n         for(int j = 1; j < m + 1; j++) {\n \n             dp[i][j] = dp[i - 1][j - 1];\n \n             if(a[i - 1] != b[j - 1]) {\n \n                 dp[i][j] += 1;\n \n             }\n \n             int temp = min(dp[i - 1][j] + 1, dp[i][j - 1] + 1);\n \n             dp[i][j] = min(temp, dp[i][j]);\n \n         }\n \n     }\n \n \n \n     cout << dp[n][m] << \"\\n\";\n \n \n \n     return 0;\n \n }\n"}