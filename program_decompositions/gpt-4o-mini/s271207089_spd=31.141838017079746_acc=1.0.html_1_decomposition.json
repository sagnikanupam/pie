{"optimized_code": "#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define int long long\n#define MN 100005\nusing namespace std;\n\ninline int read() {\n    int x = 0; char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    while (c >= '0' && c <= '9') {\n        x = (x << 3) + (x << 1) + (c - '0');\n        c = getchar();\n    }\n    return x;\n}\n\ninline ll readl() {\n    ll x = 0; char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    while (c >= '0' && c <= '9') {\n        x = (x << 3) + (x << 1) + (c - '0');\n        c = getchar();\n    }\n    return x;\n}\n\nint c[MN << 2], d[MN], sum[MN], a[MN], b[MN];\nint n, tot, l, r, res;\nll num;\n\ninline void add(int x, int v) {\n    for (int i = x; i <= ((n << 1) | 1); i += i & (-i)) c[i] += v;\n}\n\ninline int query(int x) {\n    int res = 0;\n    for (int i = x; i; i -= i & (-i)) res += c[i];\n    return res;\n}\n\ninline bool check(int x) {\n    for (int i = 1; i <= n; ++i) sum[i] = sum[i - 1] + (a[i] > b[x]);\n    for (int i = 1; i <= n; ++i) d[i] = (sum[i] << 1) - i + n + 1; d[0] = n + 1;\n    memset(c, 0, sizeof(c));\n    add(d[0], 1); num = 0ll;\n    for (int i = 1; i <= n; ++i) {\n        num += 1ll * (query(((n << 1) | 1)) - query(d[i]));\n        add(d[i], 1);\n    }\n    return (num > 1ll * (n * (n + 1ll)) / 4ll);\n}\n\nsigned main() {\n    n = read();\n    for (int i = 1; i <= n; ++i) a[i] = b[i] = readl();\n    sort(b + 1, b + n + 1);\n    tot = unique(b + 1, b + n + 1) - b - 1;\n    l = 0, r = tot, res = 0;\n    while (l <= r) {\n        int mid = (l + r) >> 1;\n        if (check(mid)) res = mid, r = mid - 1;\n        else l = mid + 1;\n    }\n    printf(\"%lld\", b[res]); return 0;\n}"}