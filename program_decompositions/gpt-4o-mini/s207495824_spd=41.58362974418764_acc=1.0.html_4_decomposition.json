{"optimized_code": "#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#define ri register int \n#define ll long long \nusing std::min;\nusing std::max;\nconst int maxn=200005;\nconst int inf=0x7fffffff;\nint n,a[maxn],b[maxn];\nint mx=-inf,mi=inf;\nll sum[maxn];\n\ninline void update(int x,int d) {\n    for(; x <= n; x += x & (-x))\n        sum[x] += d;\n}\n\ninline ll query(int x) {\n    ll ans = 0;\n    for(; x; x -= x & (-x))\n        ans += sum[x];\n    return ans;\n}\n\ninline ll chk(int k) {\n    ll ans = 0;\n    b[0] = 0;\n    int count = 0;\n    for(ri i = 1; i <= n; i++) {\n        b[i] = b[i - 1] + ((a[i] <= k) ? 1 : -1);\n        count += (b[i] > 0);\n    }\n    std::fill(sum, sum + n + 1, 0);\n    for(ri i = 1; i <= n; i++) {\n        ans += query(b[i] - 1);\n        update(b[i], 1);\n    }\n    return ans;\n}\n\ninline void read_input() {\n    std::cin >> n;\n    for(ri i = 1; i <= n; i++) {\n        std::cin >> a[i];\n        mi = min(mi, a[i]), mx = max(mx, a[i]);\n    }\n}\n\nint main() {\n    read_input();\n    int L = mi, R = mx, mid, ans;\n    ll lim = 1ll * n * (n + 1) / 4 + 1;\n    while(L <= R) {\n        mid = (L + R) >> 1;\n        if(chk(mid) >= lim) {\n            ans = mid;\n            R = mid - 1;\n        } else {\n            L = mid + 1;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}"}