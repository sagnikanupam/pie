{"optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int s; cin >> s;\n  unordered_set<int> se; // Use unordered set for faster lookup\n  int current = s;\n  int i = 1;\n  \n  // Single loop to generate sequence and check for repeats\n  while (true) { \n    if (se.find(current) != se.end()) { // Check if current already exists in the set\n      cout << i << endl; // Print the current index and exit\n      return 0;\n    }\n    se.insert(current); // Insert the current into the set after checking\n    i++;\n    if (current % 2 == 0) {\n      current /= 2;\n    } else {\n      current = 3 * current + 1;\n    }\n  }\n}"}