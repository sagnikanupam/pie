{"optimized_code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <limits>\n\nint xg(int a) {\n    return (a < 0) ? -a : a;\n}\n\nint main() {\n    int n, k;\n    std::cin >> n >> k;\n\n    std::vector<int> w(n);\n    std::vector<int> f(n, std::numeric_limits<int>::max());\n\n    for (int i = 0; i < n; ++i) {\n        std::cin >> w[i];\n    }\n\n    f[0] = 0;\n\n    for (int i = 1; i < n; ++i) {\n        for (int j = 1; j <= k; ++j) {\n            if (i - j < 0) continue;\n            f[i] = std::min(f[i], f[i - j] + xg(w[i - j] - w[i]));\n        }\n    }\n\n    /* Uncomment the below line if you want to output all the final array values\n    for (int i = 0; i < n; ++i) {\n        std::cout << f[i] << \" \";\n    }\n    std::cout << std::endl;\n    */\n\n    int result = f[n - 1] == std::numeric_limits<int>::max() ? 0 : f[n - 1];\n    std::cout << result;\n\n    return 0;\n}"}