{"optimized_code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n\n#define ll long long\n\nusing namespace std;\n\nll arr[10000000], n, k;\n\nvector<ll> dp(1e5 + 2, -1);\n\nll minCost(ll indx)\n{\n    if (indx == n - 1)\n        return 0;\n    \n    if (dp[indx] != -1)\n        return dp[indx];\n\n    ll path1 = LLONG_MAX;\n\n    for (int i = 1; i <= k; i++)\n    {\n        if ((indx + i) < n)\n            path1 = min(path1, abs(arr[indx] - arr[indx + i]) + minCost(indx + i));\n    }\n\n    dp[indx] = path1;\n    return path1;\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    cin >> n >> k;\n\n    for (int i = 0; i < n; i++)\n        cin >> arr[i];\n\n    cout << minCost(0) << endl;\n\n    return 0;\n}"}