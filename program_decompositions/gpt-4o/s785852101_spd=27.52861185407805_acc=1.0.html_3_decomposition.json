{"optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass _in {\npublic:\n    class iterator {\n    public:\n        iterator(int v) : value(v) {}\n        int operator*() const { return value; }\n        iterator& operator++() { ++value; return *this; }\n        bool operator!=(const iterator& other) const { return value != other.value; }\n    private:\n        int value;\n    };\n\n    _in(int start, int end) : start(start), end(end) {}\n    iterator begin() const { return iterator(start); }\n    iterator end() const { return iterator(end); }\nprivate:\n    int start, end;\n};\n\nint main(){\n\n    cin.tie(0);\n\n    ios::sync_with_stdio(false);\n\n    string a, b;\n\n    cin >> a >> b;\n\n    int n = a.size(), m = b.size();\n\n    vector<vector<int>> dp(n + 1, vector<int>(m + 1, 0));\n\n    for(int i : _in(0, m + 1)) dp[0][i] = i;\n\n    for(int i : _in(0, n + 1)) dp[i][0] = i;\n\n    for(int i : _in(1, n + 1)) {\n        for(int j : _in(1, m + 1)) {\n\n            dp[i][j] = dp[i - 1][j - 1];\n\n            if(a[i - 1] != b[j - 1]) dp[i][j] += 1;\n\n            int temp = min(dp[i - 1][j] + 1, dp[i][j - 1] + 1);\n\n            dp[i][j] = min(temp, dp[i][j]);\n\n        }\n    }\n\n    cout << dp[n][m] << endl;\n\n    return 0;\n\n}\n"}