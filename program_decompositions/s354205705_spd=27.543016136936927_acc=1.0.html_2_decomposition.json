{"optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long int ll;\n\nvoid solve() {\n    int n, k; cin >> n >> k;\n\n    vector<int> a(n + 1); // Changed to 1-indexed\n\n    for (int i = 1; i <= n; ++i) { // Changed to 1-indexed\n        cin >> a[i];\n    }\n\n    vector<int> memo(n + 2, INT_MAX); // Dynamic size of memo array\n    memo[1] = 0; // Start from index 1\n\n    for (int i = 1; i <= n; ++i) { // Changed to 1-indexed\n        for (int j = i + 1; j <= min(i + k, n); j++) { // Ensure j doesn't exceed n\n            memo[j] = min(memo[j], memo[i] + abs(a[i] - a[j]));\n        }\n    }\n\n    cout << memo[n] << \"\\n\"; // Output the result from index n\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    solve();\n    return 0;\n}"}