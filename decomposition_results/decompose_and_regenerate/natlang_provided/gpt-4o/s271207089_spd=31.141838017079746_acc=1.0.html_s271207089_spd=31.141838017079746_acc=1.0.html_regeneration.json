{"optimized_code": "\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\n#define ll long long\n#define int long long\n#define MN 100005\n#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL);\n\nusing namespace std;\n\ninline void read(int &x) {\n    x = 0; char c = getchar(); bool f = false;\n    while (c < '0' || c > '9') { f = (c == '-'); c = getchar(); }\n    while (c >= '0' && c <= '9') { x = (x << 3) + (x << 1) + (c - '0'); c = getchar(); }\n    if (f) x = -x;\n}\n\ninline void readl(ll &x) {\n    x = 0; char c = getchar(); bool f = false;\n    while (c < '0' || c > '9') { f = (c == '-'); c = getchar(); }\n    while (c >= '0' && c <= '9') { x = (x << 3) + (x << 1) + (c - '0'); c = getchar(); }\n    if (f) x = -x;\n}\n\nint c[MN * 10], s[MN], sum[MN], a[MN], b[MN];\nint n, tot, l, r, res;\nll num;\n\ninline void add(int x, int v) {\n    for (int i = x; i <= n * 10; i += i & -i) c[i] += v;\n}\n\ninline int query(int x) {\n    int res = 0;\n    for (int i = x; i > 0; i -= i & -i) res += c[i];\n    return res;\n}\n\ninline bool check(int x) {\n    for (int i = 1; i <= n; ++i) sum[i] = sum[i-1] + (a[i] > b[x]);\n    for (int i = 1; i <= n; ++i) s[i] = (sum[i] << 1) - i + n + 1; s[0] = n + 1;\n\n    memset(c, 0, sizeof(c));\n    add(s[0], 1); num = 0ll;\n\n    for (int i = 1; i <= n; ++i) {\n        num += 1ll * (query(n * 10) - query(s[i]));\n        add(s[i], 1);\n    }\n    return (num > 1ll * n * (n + 1) / 4);\n}\n\nsigned main() {\n    fast_io;\n    read(n);\n    for (int i = 1; i <= n; ++i) read(a[i]), b[i] = a[i];\n\n    sort(b + 1, b + n + 1);\n    tot = unique(b + 1, b + n + 1) - b - 1;\n\n    l = 0, r = tot, res = 0;\n\n    while (l <= r) {\n        int mid = (l + r) >> 1;\n        if (check(mid)) res = mid, r = mid - 1;\n        else l = mid + 1;\n    }\n\n    printf(\"%d\", b[res]);\n    return 0;\n}\n"}