{"optimized_code": "#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nconst int INF = 0x3f3f3f3f;\n\ninline int xg(int x) { return x < 0 ? -x : x; }\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    int f[1100000], w[1100000];\n    fill(f, f + k + 1, INF);\n    for (int i = 0; i < n; ++i) {\n        cin >> w[i];\n    }\n    f[0] = 0;\n    for (int i = 1; i < n; ++i) {\n        f[i] = INF;\n        for (int j = 1; j <= k; ++j) {\n            if (i - j >= 0) {\n                f[i] = min(f[i], f[i - j] + xg(w[i - j] - w[i]));\n            }\n        }\n    }    \n    if (f[n - 1] == INF) {\n        cout << 0;\n    } else {\n        cout << f[n - 1];\n    }\n    // Optionally: for (int i = 0; i < n; ++i) cout << f[i] << ' ';\n}\n"}