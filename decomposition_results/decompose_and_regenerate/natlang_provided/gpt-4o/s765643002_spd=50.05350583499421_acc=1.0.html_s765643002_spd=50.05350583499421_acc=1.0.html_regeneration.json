{"optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 1e6+10;\nint a[N], b[N], c[N], r[N];\nLL f[N];\nint n;\n\ninline int low(int x) { return x & (-x); }\n\ninline void Add(int x) {\n    while (x <= 3 * n) {\n        f[x] += 1;\n        x += low(x);\n    }\n}\n\ninline int Query(int x) {\n    int ans = 0;\n    while (x > 0) {\n        ans += f[x];\n        x -= low(x);\n    }\n    return ans;\n}\n\nbool cmp(int i, int j) {\n    return f[i] < f[j];\n}\n\nbool find(int k) {\n    memset(f, 0, sizeof(f));\n    LL Ans = 0;\n    b[0] = 0;\n    for (int i = 1; i <= n; i++) {\n        b[i] = a[i] >= c[k] ? b[i - 1] + 1 : b[i - 1];\n    }\n    for (int i = 0; i <= n; i++) {\n        b[i] = 2 * b[i] - i + n + 1;\n        r[i] = i;\n    }\n    sort(r, r + n + 1, cmp);\n    for (int i = 0; i <= n; i++) {\n        Ans += Query(r[i]);\n        Add(r[i]);\n    }\n    LL t = (LL)n * (n + 1) / 2;\n    return Ans >= (t + 1) / 2;\n}\n\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n        cin >> a[i];\n        c[i] = a[i];\n    }\n    sort(c + 1, c + n + 1);\n\n    int l = 1, r = n, ans = 0;\n    while (l <= r) {\n        int mid = (l + r) / 2;\n        if (find(mid)) {\n            ans = c[mid];\n            l = mid + 1;\n        } else {\n            r = mid - 1;\n        }\n    }\n\n    cout << ans << '\\n';\n    return 0;\n}\n"}