{"optimized_code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <climits>\n\n#define all(v) v.begin(),v.end()\n\nusing namespace std;\n\nconst int MAXN = 1e5 + 2;\n\nint arr[MAXN], n, k;\nvector<int> a(MAXN, -1), dp(MAXN, -1);\n\nint ans(int indx) {\n    if (indx == n - 1) return 0;\n    if (dp[indx] != -1) return dp[indx];\n\n    int path1 = INT_MAX;\n    for (int i = 1; i <= k; i++) {\n        if (indx + i < n) {\n            path1 = min(path1, abs(arr[indx] - arr[indx + i]) + ans(indx + i));\n        }\n    }\n\n    return dp[indx] = path1;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n    cin >> n >> k;\n    for (int i = 0; i < n; i++) {\n        cin >> arr[i];\n    }\n\n    cout << ans(0) << endl;\n    \n    return 0;\n}"}