{"optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define FAST_IO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\ntypedef long long ll;\n\nconst int inf = 999999999;\n\nvoid __print(int x) {cerr << x;}\nvoid __print(long x) {cerr << x;}\nvoid __print(long long x) {cerr << x;}\nvoid __print(unsigned x) {cerr << x;}\nvoid __print(unsigned long x) {cerr << x;}\nvoid __print(unsigned long long x) {cerr << x;}\nvoid __print(float x) {cerr << x;}\nvoid __print(double x) {cerr << x;}\nvoid __print(long double x) {cerr << x;}\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\nvoid __print(const char *x) {cerr << '\"' << x << '\"';}\nvoid __print(const string &x) {cerr << '\"' << x << '\"';}\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\n\ntemplate<typename T, typename V>\nvoid __print(const pair<T, V> &x);\ntemplate<typename T>\nvoid __print(const T &x);\n\ntemplate<typename T, typename V>\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\n\ntemplate<typename T>\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\n\nvoid _print() {cerr << \"]\\n\";}\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\n\n\nint main()\n{\n    FAST_IO;\n\n    int n, k;\n    cin >> n >> k;\n    vector<ll> arr(n);\n    vector<ll> dp(n, inf);\n\n    for (auto &x : arr) cin >> x;\n\n    dp[0] = 0;\n    for (int i = 0; i < n; ++i)\n    {\n        for (int j = i + 1; j < min(n, i + k + 1); ++j)\n        {\n            dp[j] = min(dp[j], dp[i] + abs(arr[i] - arr[j]));\n        }\n    }\n\n    cout << dp[n - 1] << endl;\n}"}