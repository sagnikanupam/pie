{"optimized_code": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\n#define ll long long\n#define int long long\n#define MN 100005\n\nusing namespace std;\n\ninline int in() {\n    int x = 0; bool f = 0; char c;\n    while ((c = getchar()) < '0' || c > '9') f = c == '-';\n    do { x = x * 10 + (c - '0'); } while ((c = getchar()) >= '0' && c <= '9');\n    return f ? -x : x;\n}\n\nint c[MN * 3], d[MN], sum[MN], a[MN], b[MN];\nint n, tot, l, r, res;\nll num;\n\ninline void add(int x, int v) {\n    for (int i = x; i < MN * 3; i += i & -i) c[i] += v;\n}\n\ninline int query(int x) {\n    int res = 0;\n    for (int i = x; i > 0; i -= i & -i) res += c[i];\n    return res;\n}\n\ninline bool check(int x) {\n    memset(sum, 0, sizeof(sum));\n    for (int i = 1; i <= n; ++i) sum[i] = sum[i - 1] + (a[i] > b[x]);\n\n    for (int i = 1; i <= n; ++i) d[i] = (sum[i] << 1) - i + n + 1;\n    d[0] = n + 1;\n    memset(c, 0, sizeof(c));\n    add(d[0], 1); num = 0;\n    \n    for (int i = 1; i <= n; ++i) {\n        num += query(MN * 2) - query(d[i]);\n        add(d[i], 1);\n    }\n\n    return num > n * (n + 1) / 4;\n}\n\nsigned main() {\n    n = in();\n    for (int i = 1; i <= n; ++i) a[i] = b[i] = in();\n\n    sort(b + 1, b + n + 1);\n    tot = unique(b + 1, b + n + 1) - b - 1;\n\n    l = 0, r = tot, res = 0;\n    while (l <= r) {\n        int mid = (l + r) >> 1;\n        if (check(mid)) res = mid, r = mid - 1;\n        else l = mid + 1;\n    }\n\n    printf(\"%lld\", b[res]);\n    return 0;\n}"}