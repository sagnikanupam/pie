{"optimized_code": "#include <bits/stdc++.h>\n\n#define INF 0x3f3f3f3f\n\nusing namespace std;\n\nconst int maxn = 1e6+10;\n\nint a[maxn];\n\nint dp[maxn];\n\nint main() {\n    int n, k;\n    scanf(\"%d%d\", &n, &k);\n\n    for (int i = 1; i <= n; ++i) {\n        scanf(\"%d\", a + i);\n    }\n\n    dp[1] = 0;\n    fill(dp + 2, dp + n + 1, INF); // Set only dp[2] to dp[n] to INF\n\n    for (int i = 1; i <= n - 1; ++i) {\n        if (dp[i] == INF) continue; // Skip unnecessary computations if dp[i] is already INF\n\n        for (int j = 1; j <= k && i + j <= n; ++j) {\n            int cost = dp[i] + abs(a[i + j] - a[i]);\n            if (cost < dp[i + j]) { // Optimize by checking before assignment\n                dp[i + j] = cost;\n            }\n        }\n    }\n\n    printf(\"%d\\n\", dp[n]);\n    return 0;\n}\n"}