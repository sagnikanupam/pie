{"optimized_code": "#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\n\ntypedef long long ll;\nconst int maxn = 1e6 + 1111;\n\nint arr[maxn];\nint dp[maxn];\n\nint main() {\n    int n, k;\n    scanf(\"%d%d\", &n, &k);\n    // Use std::fill to efficiently set the array to a large value\n    std::fill(dp, dp + n + 1, 0x3f3f3f3f);\n    dp[0] = dp[1] = 0;\n    \n    // Save operations by reading input into the array directly\n    for (int i = 1; i <= n; ++i) {\n        scanf(\"%d\", &arr[i]);\n    }\n\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= k && i - j > 0; ++j) {\n            dp[i] = min(dp[i - j] + abs(arr[i] - arr[i - j]), dp[i]);\n        }\n    }\n\n    printf(\"%d\\n\", dp[n]);\n    return 0;\n}\n"}